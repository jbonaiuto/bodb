import os
import django.conf.global_settings as DEFAULT_SETTINGS
PROJECT_PATH = os.path.abspath(os.path.dirname(__file__))

LANGUAGE_CODE = 'en-us'

DEBUG = True
TEMPLATE_DEBUG = DEBUG

ADMINS = (
    ('James Bonaiuto', 'j.bonaiuto@ucl.ac.uk'),
    )

MANAGERS = ADMINS

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'uscbp',                      # Or path to database file if using sqlite3.
        # The following settings are not used with sqlite3:
        'USER': 'root',
        'PASSWORD': '',
        'HOST': '',                      # Empty for localhost through domain sockets or '127.0.0.1' for localhost through TCP.
        'PORT': '',                      # Set to empty string for default.
        'OPTIONS': {
                       "init_command": "SET storage_engine=INNODB",
                }

    }
}

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11211',
    }
}

# Hosts/domain names that are valid for this site; required if DEBUG is False
# See https://docs.djangoproject.com/en/1.5/ref/settings/#allowed-hosts
ALLOWED_HOSTS = []

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend', # this is default
    'guardian.backends.ObjectPermissionBackend',
    )

ANONYMOUS_USER_ID = -1

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# In a Windows environment this must be set to your system time zone.
TIME_ZONE = 'America/Los_Angeles'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en-us'

SITE_ID = 1

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True

# If you set this to False, Django will not format dates, numbers and
# calendars according to the current locale.
USE_L10N = True

# If you set this to False, Django will not use timezone-aware datetimes.
USE_TZ = True

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/var/www/example.com/media/"
MEDIA_ROOT = '/var/www/bodb/bodb/media/'

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash.
# Examples: "http://example.com/media/", "http://media.example.com/"
MEDIA_URL = '/media/'

# Absolute path to the directory static files should be collected to.
# Don't put anything in this directory yourself; store your static files
# in apps' "static/" subdirectories and in STATICFILES_DIRS.
# Example: "/var/www/example.com/static/"
STATIC_ROOT = '/var/www/bodb/bodb/static'

# URL prefix for static files.
# Example: "http://example.com/static/", "http://static.example.com/"
STATIC_URL = '/static/'

# URL prefix for admin media -- CSS, JavaScript and images. Make sure to use a
# trailing slash.
# Examples: "http://foo.com/media/", "/media/".
ADMIN_MEDIA_PREFIX = STATIC_URL + 'admin/'#must be this value

# Additional locations of static files
STATICFILES_DIRS = (
# Put strings here, like "/home/html/static" or "C:/www/django/static".
# Always use forward slashes, even on Windows.
# Don't forget to use absolute paths, not relative paths.
)

# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    #    'django.contrib.staticfiles.finders.DefaultStorageFinder',
    )

# Make this unique, and don't share it with anybody.
SECRET_KEY = 'x!uux&2$de%uv)=dw*pugs%cx(@i_(c8*&5w_cn2_2)5qi097a'

# List of callables that know how to import templates from various sources.
TEMPLATE_LOADERS = (
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
    #     'django.template.loaders.eggs.Loader',
    )

TEMPLATE_CONTEXT_PROCESSORS = DEFAULT_SETTINGS.TEMPLATE_CONTEXT_PROCESSORS + (
    'uscbp.context_processors.unread_messages',
    )

MIDDLEWARE_CLASSES = (
    #'django.middleware.gzip.GZipMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    #'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.cache.FetchFromCacheMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    #'django.middleware.sqlprint.SqlPrintingMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.middleware.transaction.TransactionMiddleware',
    #'debug_toolbar.middleware.DebugToolbarMiddleware',
)

ROOT_URLCONF = 'uscbp.urls'

# Python dotted path to the WSGI application used by Django's runserver.
WSGI_APPLICATION = 'uscbp.wsgi.application'

TEMPLATE_DIRS = (
    # Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    '/home/mwinter/Git/bodb_dev/bodb/uscbp/templates',
    '/home/mwinter/Git/bodb_dev/bodb/bodb/templates',
    '/home/mwinter/Git/bodb_dev/bodb/autocomplete_light/templates',
    )

INSTALLED_APPS = (
    'longerusername',
    
    'django.contrib.auth',
    #'django.contrib.comments',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bodb',
    'guardian',
    'mptt',
    'registration',
    'taggit',
    'taggit_templatetags',
    'rest_framework',
    'documentation',
    'autocomplete_light',
    'disqus',
    'debug_toolbar',
    'south',
    'todo'
)

SESSION_SERIALIZER = 'django.contrib.sessions.serializers.JSONSerializer'

from uscbp.logging_filters import skip_suspicious_operations

# A sample logging configuration. The only tangible logging
# performed by this configuration is to send an email to
# the site admins on every HTTP 500 error when DEBUG=False.
# See http://docs.djangoproject.com/en/dev/topics/logging for
# more details on how to customize your logging configuration.
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        },
        # Define filter
        'skip_suspicious_operations': {
            '()': 'django.utils.log.CallbackFilter',
            'callback': skip_suspicious_operations,
        },
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
            },
        'django.security': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
            },
        }
}

FILE_UPLOAD_HANDLERS=("uscbp.uploadhandlers.ConvertImageUploadHandler",
                      "django.core.files.uploadhandler.MemoryFileUploadHandler",
                      "django.core.files.uploadhandler.TemporaryFileUploadHandler")

FILE_UPLOAD_MAX_MEMORY_SIZE=10000000

AUTH_PROFILE_MODULE = 'bodb.BodbProfile'

RECAPTCHA_PUBLIC_KEY='6LcsfdgSAAAAALpxjEXY3U7uSwkyIxzNRxPGhVBW'
RECAPTCHA_PRIVATE_KEY='6LcsfdgSAAAAANgA3ph1RrYQeSvV-ZzGHIjMbl5b'

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'uscbrainproject@gmail.com'
EMAIL_HOST_PASSWORD = ''
EMAIL_USE_TLS = 'true'

ACCOUNT_ACTIVATION_DAYS = 7

LOGIN_REDIRECT_URL= '/bodb/'

URL_BASE = 'http://localhost:8000'
SERVER = 'localhost'

DOCUMENTATION_ROOT = os.path.join(PROJECT_PATH, '../bodb/docs')
DOCUMENTATION_ACCESS_FUNCTION = lambda user: True

TAGCLOUD_MAX=24
TAGCLOUD_MIN=10

REST_FRAMEWORK = {
    'PAGINATE_BY': 10,                 # Default to 10
    'PAGINATE_BY_PARAM': 'page_size',  # Allow client to override, using `?page_size=xxx`.
}

RECAPTCHA_USE_SSL = True

# Use syncdb for tests instead of South migrations. Without this, some tests
# fail spuriously in MySQL.
SOUTH_TESTS_MIGRATE = False

# Disqus stuff
DISQUS_API_KEY = 'aUnaxzeCgFrX9b1AGPUlSkAM8gxi6BcDRLjkCmhftv8jShKoGzMFRuVORf7yHYCo'
DISQUS_SECRET_KEY = '< secret key here>'
DISQUS_PUBLIC_KEY = 'aUnaxzeCgFrX9b1AGPUlSkAM8gxi6BcDRLjkCmhftv8jShKoGzMFRuVORf7yHYCo'
DISQUS_WEBSITE_SHORTNAME = 'bodb-comments'

# Restrict access to todo lists/views to `is_staff()` users.
# False here falls back to `is_authenticated()` users.
TODO_STAFF_ONLY = False

# If you use the "public" ticket filing option, to whom should these tickets be assigned?
# Must be a valid username in your system. If unset, unassigned tickets go to the first superuser.
#TODO_DEFAULT_ASSIGNEE = 'johndoe'

# If you use the "public" ticket filing option, to which list should these tickets be saved?
# Defaults to first list found, which is probably not what you want!
#TODO_DEFAULT_LIST_ID = 23

# If you use the "public" ticket filing option, to which *named URL* should the user be
# redirected after submitting? (since they can't see the rest of the ticket system).
# Defaults to "/"
#TODO_PUBLIC_SUBMIT_REDIRECT = 'dashboard'